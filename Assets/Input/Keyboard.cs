//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/Keyboard.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Keyboard : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Keyboard()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Keyboard"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""66059e42-577e-4a2c-8774-b6a8e97a1749"",
            ""actions"": [
                {
                    ""name"": ""JUMP"",
                    ""type"": ""Button"",
                    ""id"": ""39d27864-43d4-4053-b8d2-2190a8cd302c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ATTACK"",
                    ""type"": ""Button"",
                    ""id"": ""7df73c89-cd20-451a-8ed6-ccee387c1dd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DROP"",
                    ""type"": ""Button"",
                    ""id"": ""0ca71fee-d236-4090-a97b-d90329209ebf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PAUSE"",
                    ""type"": ""Button"",
                    ""id"": ""3bbdf737-c111-4377-aa20-4a46835ea586"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RUN"",
                    ""type"": ""Value"",
                    ""id"": ""5a4ceeae-7e02-42d5-aa1b-5ce0e2916046"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FASTFALL"",
                    ""type"": ""Button"",
                    ""id"": ""49c8bd74-865f-4758-8a0b-68da9b8acbf3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LOOKUP"",
                    ""type"": ""Button"",
                    ""id"": ""24ac3a43-47e2-43d1-888c-24c61f2691c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LOOKDOWN"",
                    ""type"": ""Button"",
                    ""id"": ""b86b1cb6-61c1-46f4-a068-e8cb15433b78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4af037e0-cf85-4caf-bdd3-956de8372945"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JUMP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62e2a82a-70a3-46f5-b1ec-2947f974815e"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ATTACK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5857f33d-5939-4877-bf1d-8b46ae725806"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DROP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf92f4cf-17f4-4081-83cc-bbdb7b267a27"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PAUSE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""9402a196-a205-4c05-a685-6ceed7cb1ee4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RUN"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d431d092-ccc3-4d32-83ef-b0167ae817ac"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RUN"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""88289286-962a-48ff-a982-2e355171e658"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RUN"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bddeeada-5c4d-42fe-87ac-59d06c2fc251"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FASTFALL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a46a186-6af0-4b06-83fd-fad5267e9eb7"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LOOKDOWN"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cf0898d-eea8-4573-ab79-675e1cf8cecb"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LOOKUP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""63a3eb70-f8b1-42a9-8f18-ab015a00f4eb"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Button"",
                    ""id"": ""840d2bc9-4f40-4b62-8ee6-5e642702a46f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Act"",
                    ""type"": ""Button"",
                    ""id"": ""96fbb0dd-cced-4db0-84d6-3114f09a0ab7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit Game"",
                    ""type"": ""Button"",
                    ""id"": ""4dd8b466-b26e-4715-9743-fa78de06dd36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a049e39b-e79a-409a-9440-fca9ee5e8d57"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a375e3f4-d527-42c5-93f7-ac029ea215cb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5515ebb0-3a48-42e9-aba5-7548c8623201"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""93c41f22-4200-4412-bd2a-e4cd74695f31"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""05e95083-c8a3-4e32-9205-1cd4a899a685"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e1478075-f2cc-4973-a872-2a6f91687f10"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""75f1d13a-4b7f-4156-955d-db3d0098b565"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Act"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e746d63-cf58-41c3-b82f-02d79a406275"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Hold(duration=4)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit Game"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_JUMP = m_Gameplay.FindAction("JUMP", throwIfNotFound: true);
        m_Gameplay_ATTACK = m_Gameplay.FindAction("ATTACK", throwIfNotFound: true);
        m_Gameplay_DROP = m_Gameplay.FindAction("DROP", throwIfNotFound: true);
        m_Gameplay_PAUSE = m_Gameplay.FindAction("PAUSE", throwIfNotFound: true);
        m_Gameplay_RUN = m_Gameplay.FindAction("RUN", throwIfNotFound: true);
        m_Gameplay_FASTFALL = m_Gameplay.FindAction("FASTFALL", throwIfNotFound: true);
        m_Gameplay_LOOKUP = m_Gameplay.FindAction("LOOKUP", throwIfNotFound: true);
        m_Gameplay_LOOKDOWN = m_Gameplay.FindAction("LOOKDOWN", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Act = m_UI.FindAction("Act", throwIfNotFound: true);
        m_UI_ExitGame = m_UI.FindAction("Exit Game", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_JUMP;
    private readonly InputAction m_Gameplay_ATTACK;
    private readonly InputAction m_Gameplay_DROP;
    private readonly InputAction m_Gameplay_PAUSE;
    private readonly InputAction m_Gameplay_RUN;
    private readonly InputAction m_Gameplay_FASTFALL;
    private readonly InputAction m_Gameplay_LOOKUP;
    private readonly InputAction m_Gameplay_LOOKDOWN;
    public struct GameplayActions
    {
        private @Keyboard m_Wrapper;
        public GameplayActions(@Keyboard wrapper) { m_Wrapper = wrapper; }
        public InputAction @JUMP => m_Wrapper.m_Gameplay_JUMP;
        public InputAction @ATTACK => m_Wrapper.m_Gameplay_ATTACK;
        public InputAction @DROP => m_Wrapper.m_Gameplay_DROP;
        public InputAction @PAUSE => m_Wrapper.m_Gameplay_PAUSE;
        public InputAction @RUN => m_Wrapper.m_Gameplay_RUN;
        public InputAction @FASTFALL => m_Wrapper.m_Gameplay_FASTFALL;
        public InputAction @LOOKUP => m_Wrapper.m_Gameplay_LOOKUP;
        public InputAction @LOOKDOWN => m_Wrapper.m_Gameplay_LOOKDOWN;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @JUMP.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJUMP;
                @JUMP.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJUMP;
                @JUMP.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJUMP;
                @ATTACK.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnATTACK;
                @ATTACK.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnATTACK;
                @ATTACK.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnATTACK;
                @DROP.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDROP;
                @DROP.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDROP;
                @DROP.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDROP;
                @PAUSE.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPAUSE;
                @PAUSE.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPAUSE;
                @PAUSE.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPAUSE;
                @RUN.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRUN;
                @RUN.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRUN;
                @RUN.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRUN;
                @FASTFALL.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFASTFALL;
                @FASTFALL.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFASTFALL;
                @FASTFALL.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFASTFALL;
                @LOOKUP.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLOOKUP;
                @LOOKUP.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLOOKUP;
                @LOOKUP.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLOOKUP;
                @LOOKDOWN.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLOOKDOWN;
                @LOOKDOWN.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLOOKDOWN;
                @LOOKDOWN.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLOOKDOWN;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @JUMP.started += instance.OnJUMP;
                @JUMP.performed += instance.OnJUMP;
                @JUMP.canceled += instance.OnJUMP;
                @ATTACK.started += instance.OnATTACK;
                @ATTACK.performed += instance.OnATTACK;
                @ATTACK.canceled += instance.OnATTACK;
                @DROP.started += instance.OnDROP;
                @DROP.performed += instance.OnDROP;
                @DROP.canceled += instance.OnDROP;
                @PAUSE.started += instance.OnPAUSE;
                @PAUSE.performed += instance.OnPAUSE;
                @PAUSE.canceled += instance.OnPAUSE;
                @RUN.started += instance.OnRUN;
                @RUN.performed += instance.OnRUN;
                @RUN.canceled += instance.OnRUN;
                @FASTFALL.started += instance.OnFASTFALL;
                @FASTFALL.performed += instance.OnFASTFALL;
                @FASTFALL.canceled += instance.OnFASTFALL;
                @LOOKUP.started += instance.OnLOOKUP;
                @LOOKUP.performed += instance.OnLOOKUP;
                @LOOKUP.canceled += instance.OnLOOKUP;
                @LOOKDOWN.started += instance.OnLOOKDOWN;
                @LOOKDOWN.performed += instance.OnLOOKDOWN;
                @LOOKDOWN.canceled += instance.OnLOOKDOWN;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Act;
    private readonly InputAction m_UI_ExitGame;
    public struct UIActions
    {
        private @Keyboard m_Wrapper;
        public UIActions(@Keyboard wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Act => m_Wrapper.m_UI_Act;
        public InputAction @ExitGame => m_Wrapper.m_UI_ExitGame;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Act.started -= m_Wrapper.m_UIActionsCallbackInterface.OnAct;
                @Act.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnAct;
                @Act.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnAct;
                @ExitGame.started -= m_Wrapper.m_UIActionsCallbackInterface.OnExitGame;
                @ExitGame.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnExitGame;
                @ExitGame.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnExitGame;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Act.started += instance.OnAct;
                @Act.performed += instance.OnAct;
                @Act.canceled += instance.OnAct;
                @ExitGame.started += instance.OnExitGame;
                @ExitGame.performed += instance.OnExitGame;
                @ExitGame.canceled += instance.OnExitGame;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IGameplayActions
    {
        void OnJUMP(InputAction.CallbackContext context);
        void OnATTACK(InputAction.CallbackContext context);
        void OnDROP(InputAction.CallbackContext context);
        void OnPAUSE(InputAction.CallbackContext context);
        void OnRUN(InputAction.CallbackContext context);
        void OnFASTFALL(InputAction.CallbackContext context);
        void OnLOOKUP(InputAction.CallbackContext context);
        void OnLOOKDOWN(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnAct(InputAction.CallbackContext context);
        void OnExitGame(InputAction.CallbackContext context);
    }
}
